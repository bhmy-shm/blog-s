// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://www.bhmy.top",
        "contact": {
            "name": "github地址",
            "url": "https://github.com/"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login/getToken": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "申请获取token编码",
                "parameters": [
                    {
                        "maxLength": 11,
                        "description": "用户账户",
                        "name": "user_phone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "minLength": 6,
                        "description": "用户密码",
                        "name": "user_pass",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "token密钥键",
                        "name": "app_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "token密钥值",
                        "name": "app_secret",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "申请token成功",
                        "schema": {
                            "$ref": "#/definitions/JWT.AuthJwt"
                        }
                    },
                    "400": {
                        "description": "请求错误",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "内部错误",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/login/users": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "用户携带token编码进行登录",
                "parameters": [
                    {
                        "maxLength": 11,
                        "description": "用户账户",
                        "name": "user_phone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "minLength": 6,
                        "description": "用户密码",
                        "name": "user_pass",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "token编码",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "登录成功",
                        "schema": {
                            "$ref": "#/definitions/UserModel.User"
                        }
                    },
                    "400": {
                        "description": "请求错误",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "内部错误",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/register/auth": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "注册新的用户",
                "parameters": [
                    {
                        "maxLength": 11,
                        "description": "用户名",
                        "name": "user_phone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "minLength": 6,
                        "description": "密码",
                        "name": "user_pass",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "邮箱号",
                        "name": "user_email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/UserModel.User"
                        }
                    },
                    "400": {
                        "description": "请求错误",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "内部错误",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/register/authentication": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "确定手机验证码",
                "parameters": [
                    {
                        "maxLength": 6,
                        "description": "手机验证码",
                        "name": "auth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "验证码输入正确",
                        "schema": {
                            "$ref": "#/definitions/service.AuthRequest"
                        }
                    },
                    "400": {
                        "description": "请求错误",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "内部错误",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "JWT.AuthJwt": {
            "type": "object",
            "properties": {
                "app_key": {
                    "type": "string"
                },
                "app_secret": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_phone": {
                    "type": "string"
                }
            }
        },
        "UserModel.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "state": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_email": {
                    "type": "string"
                },
                "user_pass": {
                    "type": "string"
                },
                "user_phone": {
                    "type": "string"
                }
            }
        },
        "errcode.Error": {
            "type": "object"
        },
        "service.AuthRequest": {
            "type": "object",
            "required": [
                "auth"
            ],
            "properties": {
                "auth": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "博客系统",
	Description: "Go-web 孙海铭的入门项目",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
